# Generated by Django 5.2 on 2025-05-06 20:00

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.JSONField(blank=True, null=True)),
                ('text_answer', models.TextField(blank=True, null=True)),
                ('numeric_value', models.FloatField(blank=True, null=True)),
                ('date_value', models.DateField(blank=True, null=True)),
                ('time_value', models.TimeField(blank=True, null=True)),
                ('file_upload', models.FileField(blank=True, null=True, upload_to='answer_files/')),
                ('score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompletionEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('start', 'Started'), ('answer', 'Answered Question'), ('navigation', 'Navigation'), ('timeout', 'Timeout'), ('completion', 'Completed'), ('abandonment', 'Abandoned')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Completion Event',
                'verbose_name_plural': 'Completion Events',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CompletionTracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_activity_at', models.DateTimeField(auto_now=True)),
                ('time_spent', models.DurationField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('completion_percentage', models.FloatField(default=0)),
                ('answers_required', models.PositiveIntegerField(default=0)),
                ('answers_provided', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Completion Tracker',
                'verbose_name_plural': 'Completion Trackers',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email_type', models.CharField(choices=[('high_risk', 'High Risk Notification'), ('report', 'Response Report'), ('bulk', 'Bulk Notification'), ('other', 'Other')], max_length=20)),
                ('subject', models.CharField(max_length=255)),
                ('recipient_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('sender_email', models.EmailField(default='noreply@mindtrack.com', max_length=254)),
                ('template', models.CharField(blank=True, max_length=255, null=True)),
                ('context', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Email Log',
                'verbose_name_plural': 'Email Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient_identifier', models.CharField(blank=True, max_length=50, null=True)),
                ('patient_name', models.CharField(blank=True, max_length=255, null=True)),
                ('patient_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('patient_age', models.PositiveIntegerField(blank=True, null=True)),
                ('patient_gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('non-binary', 'Non-Binary'), ('prefer_not_to_say', 'Prefer Not to Say'), ('other', 'Other')], max_length=20, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('flagged_for_review', models.BooleanField(default=False)),
                ('completion_time', models.PositiveIntegerField(blank=True, help_text='Time to complete in seconds', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('abandoned', 'Abandoned')], default='in_progress', max_length=20)),
                ('metadata', models.JSONField(default=dict)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Response',
                'verbose_name_plural': 'Responses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('summary', models.TextField()),
                ('detailed_analysis', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('insights', models.JSONField(blank=True, null=True)),
                ('raw_data', models.JSONField(default=dict)),
                ('model_used', models.CharField(blank=True, max_length=100, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('risk_justification', models.TextField(blank=True)),
                ('trends', models.TextField(blank=True)),
                ('follow_up_areas', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_analyses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Analysis',
                'verbose_name_plural': 'AI Analyses',
                'ordering': ['-created_at'],
            },
        ),
    ]
