# Generated by Django 5.2 on 2025-05-06 20:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('feedback', '0001_initial'),
        ('groups', '0001_initial'),
        ('surveys', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='answer',
            name='multiple_choices',
            field=models.ManyToManyField(blank=True, related_name='multiple_answers', to='surveys.surveysquestionchoice'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='surveys.surveysquestion'),
        ),
        migrations.AddField(
            model_name='answer',
            name='selected_choice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='answers', to='surveys.surveysquestionchoice'),
        ),
        migrations.AddField(
            model_name='completionevent',
            name='answer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completion_events', to='feedback.answer'),
        ),
        migrations.AddField(
            model_name='completionevent',
            name='question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completion_events', to='surveys.surveysquestion'),
        ),
        migrations.AddField(
            model_name='completionevent',
            name='tracker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='feedback.completiontracker'),
        ),
        migrations.AddField(
            model_name='emaillog',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_logs', to='groups.organization'),
        ),
        migrations.AddField(
            model_name='emaillog',
            name='sent_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_emails', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='response',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responses', to='groups.organization'),
        ),
        migrations.AddField(
            model_name='response',
            name='questionnaire',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questionnaire_responses', to='surveys.surveysquestionnaire'),
        ),
        migrations.AddField(
            model_name='response',
            name='survey',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='surveys.surveysquestionnaire'),
        ),
        migrations.AddField(
            model_name='response',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='questionnaire_responses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='emaillog',
            name='response',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_logs', to='feedback.response'),
        ),
        migrations.AddField(
            model_name='completiontracker',
            name='response',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='completion_tracker', to='feedback.response'),
        ),
        migrations.AddField(
            model_name='answer',
            name='response',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='feedback.response'),
        ),
        migrations.AddField(
            model_name='aianalysis',
            name='response',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='feedback.response'),
        ),
        migrations.AddIndex(
            model_name='response',
            index=models.Index(fields=['survey'], name='fb_resp_survey_idx1'),
        ),
        migrations.AddIndex(
            model_name='response',
            index=models.Index(fields=['user'], name='fb_resp_user_idx1'),
        ),
        migrations.AddIndex(
            model_name='response',
            index=models.Index(fields=['organization'], name='fb_resp_org_idx1'),
        ),
        migrations.AddIndex(
            model_name='response',
            index=models.Index(fields=['patient_identifier'], name='fb_resp_patient_id_idx1'),
        ),
        migrations.AddIndex(
            model_name='response',
            index=models.Index(fields=['patient_email'], name='fb_resp_patient_email_idx1'),
        ),
        migrations.AddIndex(
            model_name='response',
            index=models.Index(fields=['risk_level'], name='fb_resp_risk_level_idx1'),
        ),
        migrations.AddIndex(
            model_name='response',
            index=models.Index(fields=['completed_at'], name='fb_resp_completed_at_idx1'),
        ),
        migrations.AddIndex(
            model_name='response',
            index=models.Index(fields=['created_at'], name='fb_resp_created_at_idx1'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['email_type'], name='fb_email_type_idx1'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['status'], name='fb_email_status_idx1'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['recipient_email'], name='fb_email_recipient_idx1'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['response'], name='fb_email_response_idx1'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['organization'], name='fb_email_org_idx1'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['created_at'], name='fb_email_created_at_idx1'),
        ),
        migrations.AddIndex(
            model_name='answer',
            index=models.Index(fields=['response'], name='fb_ans_response_idx1'),
        ),
        migrations.AddIndex(
            model_name='answer',
            index=models.Index(fields=['question'], name='fb_ans_question_idx1'),
        ),
        migrations.AlterUniqueTogether(
            name='answer',
            unique_together={('response', 'question')},
        ),
        migrations.AddIndex(
            model_name='aianalysis',
            index=models.Index(fields=['response'], name='fb_ai_response_idx1'),
        ),
        migrations.AddIndex(
            model_name='aianalysis',
            index=models.Index(fields=['created_by'], name='fb_ai_created_by_idx1'),
        ),
        migrations.AddIndex(
            model_name='aianalysis',
            index=models.Index(fields=['created_at'], name='fb_ai_created_at_idx1'),
        ),
    ]
