# Generated by Django 5.2 on 2025-05-06 20:00

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIAnalysisResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_data', models.JSONField(help_text='Analysis results in JSON format')),
                ('summary', models.TextField(blank=True, help_text='Human-readable summary of the analysis')),
                ('confidence_score', models.FloatField(blank=True, help_text='Confidence level of the analysis (0-1)', null=True)),
                ('analyzed_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'AI Analysis Result',
                'verbose_name_plural': 'AI Analysis Results',
                'ordering': ['-analyzed_at'],
            },
        ),
        migrations.CreateModel(
            name='AIFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('accuracy', 'Accuracy'), ('relevance', 'Relevance'), ('usefulness', 'Usefulness'), ('other', 'Other')], max_length=20)),
                ('rating', models.IntegerField(help_text='Rating from 1-5')),
                ('comments', models.TextField(blank=True)),
                ('provided_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'AI Feedback',
                'verbose_name_plural': 'AI Feedback',
                'ordering': ['-provided_at'],
            },
        ),
        migrations.CreateModel(
            name='AIInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('insight_type', models.CharField(choices=[('trend', 'Trend'), ('anomaly', 'Anomaly'), ('pattern', 'Pattern'), ('recommendation', 'Recommendation'), ('prediction', 'Prediction'), ('other', 'Other')], max_length=20)),
                ('severity', models.CharField(blank=True, choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10, null=True)),
                ('supporting_data', models.JSONField(blank=True, default=dict, help_text='Data supporting this insight')),
                ('is_archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'AI Insight',
                'verbose_name_plural': 'AI Insights',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('model_type', models.CharField(choices=[('sentiment', 'Sentiment Analysis'), ('classification', 'Classification'), ('clustering', 'Clustering'), ('regression', 'Regression'), ('nlp', 'Natural Language Processing'), ('custom', 'Custom Model')], max_length=20)),
                ('version', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('configuration', models.JSONField(blank=True, default=dict, help_text='Model configuration parameters')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'AI Model',
                'verbose_name_plural': 'AI Models',
                'ordering': ['-is_active', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BatchAnalysisJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('analysis_type', models.CharField(choices=[('comprehensive', 'Comprehensive Analysis'), ('insights', 'Key Insights'), ('sentiment', 'Sentiment Analysis'), ('themes', 'Theme Identification'), ('patterns', 'Pattern Recognition')], default='comprehensive', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('total_responses', models.IntegerField(default=0)),
                ('processed_responses', models.IntegerField(default=0)),
                ('skipped_responses', models.IntegerField(default=0)),
                ('error_responses', models.IntegerField(default=0)),
                ('error_details', models.JSONField(default=list)),
                ('aggregate_insights', models.JSONField(blank=True, default=dict)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Batch Analysis Job',
                'verbose_name_plural': 'Batch Analysis Jobs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('layout', models.CharField(choices=[('1_column', 'Single Column'), ('2_columns', 'Two Columns'), ('3_columns', 'Three Columns'), ('2_1', 'Two-One Split'), ('1_2', 'One-Two Split'), ('custom', 'Custom Layout')], default='2_columns', max_length=20)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Dashboard',
                'verbose_name_plural': 'Dashboards',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('report_type', models.CharField(choices=[('response_summary', 'Response Summary'), ('trend_analysis', 'Trend Analysis'), ('ai_insights', 'AI Insights'), ('demographic_analysis', 'Demographic Analysis'), ('risk_assessment', 'Risk Assessment'), ('custom_export', 'Custom Export')], max_length=50)),
                ('report_format', models.CharField(choices=[('pdf', 'PDF'), ('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON'), ('html', 'HTML')], max_length=20)),
                ('parameters', models.JSONField(blank=True, default=dict, help_text='Parameters used to generate the report')),
                ('file', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('pdf_file', models.FileField(blank=True, help_text='PDF version of the report', null=True, upload_to='reports/pdf/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('report_type', models.CharField(choices=[('response_summary', 'Response Summary'), ('trend_analysis', 'Trend Analysis'), ('ai_insights', 'AI Insights'), ('demographic_analysis', 'Demographic Analysis'), ('risk_assessment', 'Risk Assessment'), ('custom_export', 'Custom Export')], max_length=50)),
                ('report_format', models.CharField(choices=[('pdf', 'PDF'), ('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON'), ('html', 'HTML')], max_length=20)),
                ('parameters', models.JSONField(blank=True, default=dict, help_text='Parameters used to generate the report')),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly')], max_length=20)),
                ('next_run', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Report Schedule',
                'verbose_name_plural': 'Report Schedules',
                'ordering': ['next_run'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('clinical', 'Clinical Report'), ('dashboard', 'Dashboard Report'), ('batch', 'Batch Report'), ('comparative', 'Comparative Report')], max_length=20)),
                ('parameters', models.JSONField(default=dict, help_text='Parameters for the report')),
                ('schedule', models.JSONField(default=dict, help_text='Schedule information (frequency, day, time)')),
                ('recipient_email', models.EmailField(max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('last_sent', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Scheduled Report',
                'verbose_name_plural': 'Scheduled Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('widget_type', models.CharField(choices=[('chart_line', 'Line Chart'), ('chart_bar', 'Bar Chart'), ('chart_pie', 'Pie Chart'), ('chart_doughnut', 'Doughnut Chart'), ('chart_radar', 'Radar Chart'), ('table', 'Table'), ('metric', 'Metric'), ('text', 'Text'), ('map', 'Map'), ('heatmap', 'Heatmap')], max_length=20)),
                ('data_source', models.CharField(choices=[('questionnaire', 'Questionnaire Data'), ('response', 'Response Data'), ('user', 'User Data'), ('organization', 'Organization Data'), ('custom', 'Custom Data')], max_length=20)),
                ('data_filter', models.JSONField(blank=True, default=dict)),
                ('position_x', models.PositiveIntegerField(default=0)),
                ('position_y', models.PositiveIntegerField(default=0)),
                ('width', models.PositiveIntegerField(default=1)),
                ('height', models.PositiveIntegerField(default=1)),
                ('config', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Widget',
                'verbose_name_plural': 'Widgets',
                'ordering': ['dashboard', 'position_y', 'position_x'],
            },
        ),
        migrations.CreateModel(
            name='AIAnalysisConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=True)),
                ('auto_analyze', models.BooleanField(default=False, help_text='Automatically analyze new responses')),
                ('parameters', models.JSONField(blank=True, default=dict, help_text='Analysis parameters specific to this questionnaire')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_ai_configs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Analysis Configuration',
                'verbose_name_plural': 'AI Analysis Configurations',
                'ordering': ['questionnaire', 'ai_model'],
            },
        ),
    ]
