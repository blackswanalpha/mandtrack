# Generated by Django 5.2 on 2025-04-30 12:53

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('feedback', '0001_initial'),
        ('groups', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('question_type', models.CharField(choices=[('text', 'Text'), ('textarea', 'Long Text'), ('number', 'Number'), ('single_choice', 'Single Choice'), ('multiple_choice', 'Multiple Choice'), ('scale', 'Scale'), ('date', 'Date'), ('time', 'Time'), ('file', 'File Upload')], default='text', max_length=20)),
                ('required', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('options', models.JSONField(blank=True, null=True)),
                ('conditional_logic', models.JSONField(blank=True, null=True)),
                ('validation_rules', models.JSONField(blank=True, null=True)),
                ('scoring_weight', models.FloatField(default=1.0)),
                ('category', models.CharField(blank=True, choices=[('demographic', 'Demographic'), ('clinical', 'Clinical'), ('behavioral', 'Behavioral'), ('satisfaction', 'Satisfaction'), ('feedback', 'Feedback'), ('knowledge', 'Knowledge'), ('other', 'Other')], max_length=20, null=True)),
                ('max_score', models.FloatField(default=0)),
                ('is_scored', models.BooleanField(default=False)),
                ('is_visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'db_table': 'surveys_question',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('subject', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('html_content', models.TextField(blank=True)),
                ('variables', models.JSONField(blank=True, null=True)),
                ('category', models.CharField(choices=[('general', 'General'), ('welcome', 'Welcome'), ('password_reset', 'Password Reset'), ('verification', 'Verification'), ('response', 'Response'), ('analysis', 'Analysis'), ('notification', 'Notification'), ('reminder', 'Reminder')], default='general', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_email_templates', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_templates', to='groups.organization')),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuestionChoice',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('text', models.CharField(max_length=255)),
                ('order', models.PositiveIntegerField(default=0)),
                ('score', models.IntegerField(default=0)),
                ('is_correct', models.BooleanField(default=False)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='surveys.question')),
            ],
            options={
                'verbose_name': 'Question Choice',
                'verbose_name_plural': 'Question Choices',
                'db_table': 'surveys_questionchoice',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('instructions', models.TextField(blank=True)),
                ('type', models.CharField(choices=[('standard', 'Standard'), ('assessment', 'Assessment'), ('screening', 'Screening'), ('feedback', 'Feedback'), ('survey', 'Survey'), ('clinical', 'Clinical'), ('research', 'Research'), ('educational', 'Educational'), ('other', 'Other')], default='standard', max_length=20)),
                ('category', models.CharField(choices=[('anxiety', 'Anxiety'), ('depression', 'Depression'), ('stress', 'Stress'), ('general', 'General'), ('mental_health', 'Mental Health'), ('physical_health', 'Physical Health'), ('education', 'Education'), ('customer_satisfaction', 'Customer Satisfaction'), ('employee_feedback', 'Employee Feedback'), ('research', 'Research'), ('clinical_assessment', 'Clinical Assessment'), ('custom', 'Custom')], default='custom', max_length=30)),
                ('estimated_time', models.PositiveIntegerField(default=10, help_text='Estimated time to complete in minutes')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_adaptive', models.BooleanField(default=False)),
                ('is_qr_enabled', models.BooleanField(default=True)),
                ('is_template', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('allow_anonymous', models.BooleanField(default=True, help_text='Whether to allow anonymous responses')),
                ('requires_auth', models.BooleanField(default=False, help_text='Whether respondents need to be logged in')),
                ('max_responses', models.PositiveIntegerField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('tags', models.JSONField(default=list)),
                ('language', models.CharField(default='en', max_length=10)),
                ('time_limit', models.PositiveIntegerField(default=0, help_text='Time limit in minutes (0 for no limit)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('access_code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_questionnaires', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questionnaires', to='groups.organization')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='versions', to='surveys.questionnaire')),
            ],
            options={
                'verbose_name': 'Questionnaire',
                'verbose_name_plural': 'Questionnaires',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='survey',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='surveys.questionnaire'),
        ),
        migrations.CreateModel(
            name='QRCode',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('url', models.URLField()),
                ('access_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_qr_codes', to=settings.AUTH_USER_MODEL)),
                ('survey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qr_codes', to='surveys.questionnaire')),
            ],
            options={
                'verbose_name': 'QR Code',
                'verbose_name_plural': 'QR Codes',
                'db_table': 'surveys_qrcode',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('html_content', models.TextField(blank=True)),
                ('recipient', models.EmailField(max_length=254)),
                ('recipient_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='sent', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict)),
                ('response', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_logs', to='feedback.response')),
                ('sent_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_emails', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs', to='surveys.emailtemplate')),
                ('survey', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_logs', to='surveys.questionnaire')),
            ],
            options={
                'verbose_name': 'Email Log',
                'verbose_name_plural': 'Email Logs',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='ScoringConfig',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('scoring_method', models.CharField(choices=[('sum', 'Sum of Scores'), ('average', 'Average Score'), ('weighted_sum', 'Weighted Sum'), ('custom', 'Custom Formula')], default='sum', max_length=20)),
                ('max_score', models.FloatField(default=100)),
                ('passing_score', models.FloatField(default=70)),
                ('rules', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_scoring_configs', to=settings.AUTH_USER_MODEL)),
                ('survey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scoring_configs', to='surveys.questionnaire')),
            ],
            options={
                'verbose_name': 'Scoring Configuration',
                'verbose_name_plural': 'Scoring Configurations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='emailtemplate',
            index=models.Index(fields=['category'], name='surveys_ema_categor_092976_idx'),
        ),
        migrations.AddIndex(
            model_name='emailtemplate',
            index=models.Index(fields=['is_active'], name='surveys_ema_is_acti_220742_idx'),
        ),
        migrations.AddIndex(
            model_name='emailtemplate',
            index=models.Index(fields=['is_default'], name='surveys_ema_is_defa_989412_idx'),
        ),
        migrations.AddIndex(
            model_name='emailtemplate',
            index=models.Index(fields=['organization'], name='surveys_ema_organiz_e4b8b0_idx'),
        ),
        migrations.AddIndex(
            model_name='questionchoice',
            index=models.Index(fields=['question'], name='surveys_que_questio_bb007d_idx'),
        ),
        migrations.AddIndex(
            model_name='questionchoice',
            index=models.Index(fields=['order'], name='surveys_que_order_5c80b7_idx'),
        ),
        migrations.AddIndex(
            model_name='questionnaire',
            index=models.Index(fields=['is_active'], name='surveys_que_is_acti_f1c4e4_idx'),
        ),
        migrations.AddIndex(
            model_name='questionnaire',
            index=models.Index(fields=['is_public'], name='surveys_que_is_publ_aa3837_idx'),
        ),
        migrations.AddIndex(
            model_name='questionnaire',
            index=models.Index(fields=['category'], name='surveys_que_categor_275068_idx'),
        ),
        migrations.AddIndex(
            model_name='questionnaire',
            index=models.Index(fields=['type'], name='surveys_que_type_dfb0c3_idx'),
        ),
        migrations.AddIndex(
            model_name='questionnaire',
            index=models.Index(fields=['created_at'], name='surveys_que_created_2ab4c4_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['survey'], name='surveys_que_survey__1096d0_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['question_type'], name='surveys_que_questio_77060f_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['order'], name='surveys_que_order_bb46a2_idx'),
        ),
        migrations.AddIndex(
            model_name='qrcode',
            index=models.Index(fields=['survey'], name='surveys_qrc_survey__796ef0_idx'),
        ),
        migrations.AddIndex(
            model_name='qrcode',
            index=models.Index(fields=['is_active'], name='surveys_qrc_is_acti_479280_idx'),
        ),
        migrations.AddIndex(
            model_name='qrcode',
            index=models.Index(fields=['created_at'], name='surveys_qrc_created_aee0ec_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['recipient'], name='surveys_ema_recipie_c11260_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['sent_at'], name='surveys_ema_sent_at_9611de_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['status'], name='surveys_ema_status_3fd5c3_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['template'], name='surveys_ema_templat_b8f037_idx'),
        ),
        migrations.AddIndex(
            model_name='scoringconfig',
            index=models.Index(fields=['survey'], name='surveys_sco_survey__6cc31a_idx'),
        ),
        migrations.AddIndex(
            model_name='scoringconfig',
            index=models.Index(fields=['is_active'], name='surveys_sco_is_acti_bd099d_idx'),
        ),
        migrations.AddIndex(
            model_name='scoringconfig',
            index=models.Index(fields=['is_default'], name='surveys_sco_is_defa_13d108_idx'),
        ),
    ]
